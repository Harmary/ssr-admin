generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String // хэш
  role          Role      @default(USER)
  emailVerified DateTime?
  image         String?

  accounts Account[]
  sessions Session[]
  orders   Order[]
}

enum Role {
  USER
  ADMIN
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Decimal
  image       String?
  categoryId  String
  createdAt   DateTime @default(now())

  category  Category    @relation(fields: [categoryId], references: [id])
  OrderItem OrderItem[]
}

model Category {
  id       String    @id @default(cuid())
  name     String
  products Product[]
}

model Order {
  id        String   @id @default(cuid())
  userId    String
  createdAt DateTime @default(now())

  user  User        @relation(fields: [userId], references: [id])
  items OrderItem[]
}

model OrderItem {
  id        String @id @default(cuid())
  orderId   String
  productId String
  quantity  Int

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
