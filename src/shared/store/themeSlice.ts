import { StateCreator } from 'zustand';
import { persist } from 'zustand/middleware';

export type Theme = 'light' | 'dark';

export interface ThemeSlice {
    theme: Theme;
    toggleTheme: () => void;
    setTheme: (theme: Theme) => void;
}

// üëá –°–Ω–∞—á–∞–ª–∞ –æ–±—ã—á–Ω—ã–π slice
const _createThemeSlice: StateCreator<
    ThemeSlice,
    [],
    [],
    ThemeSlice
> = (set) => ({
    theme: 'light',

    toggleTheme: () =>
        set((state) => ({
            theme: state.theme === 'light' ? 'dark' : 'light',
        })),

    setTheme: (theme) => set({ theme }),
});

// üëá –¢–µ–ø–µ—Ä—å –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –µ–≥–æ –≤ persist –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º
export const createThemeSlice: StateCreator<
    ThemeSlice,
    [],
    [['zustand/persist', unknown]],
    ThemeSlice
> = persist(
    _createThemeSlice,
    {
        name: 'theme-storage', // –ö–ª—é—á –≤ localStorage
        partialize: (state) => ({ theme: state.theme }), // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ theme
    }
);
